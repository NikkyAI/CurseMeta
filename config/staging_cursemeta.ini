#!/bin/bash -

[uwsgi]

# set config magic variables
set-placeholder = app_name=staging_cursemeta
set-placeholder = app_owner=cursemeta
set-placeholder = app_root=/srv/http/%(app_name)

socket = /var/uwsgi/%(app_owner)/%(app_name).sock
stats = /var/uwsgi/%(app_owner)/stats-%(app_name).sock
chown-socket = %(app_owner):http
chmod-socket = 660

# uwsgi installed for python three so don't need to specify python3 as the plugin
plugins=python

pythonpath = %(app_root)

virtualenv = %(app_root)/venv/

chdir = %(app_root)/run
module = Frontend
# wsgi-file = run.py
callable = app

# set configuration environment
env = CONFIG_ENV=staging

## Adaptive Worker Spawning
# set cheaper algorithm to use, if not set default will be used
cheaper-algo = spare
# minimum number of workers to keep at all times
cheaper = 1
# number of workers to spawn at startup
cheaper-initial = 1
# maximum number of workers that can be spawned
workers = 4
# how many workers should be spawned at a time
cheaper-step = 1

max-worker-lifetime = 3600

vacuum = true
die-on-term = True

uid = %(app_owner)
gid = http

py-autoreload = 1

logto = /var/log/uwsgi/%(app_name).log

# manage celery, redis is a system service and run independant of uwsgi
attach-daemon = PYTHONPATH=%(pythonpath) %(virtualenv)bin/celery -A %(module):celery worker  --loglevel=info --pidfile=celery_worker_%(app_name).pid
attach-daemon = PYTHONPATH=%(pythonpath) %(virtualenv)bin/celery -A %(module):celery beat --loglevel=info  --pidfile=celery_beat_%(app_name).pid
